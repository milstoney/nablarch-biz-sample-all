<?xml version="1.0" encoding="UTF-8"?>
<component-configuration xmlns="http://tis.co.jp/nablarch/component-configuration"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://tis.co.jp/nablarch/component-configuration ../../../../../../Nablarch/resources/component-configuration.xsd">

  <config-file file="db.config" />

  <component name="sqlLoader" class="nablarch.core.db.statement.BasicSqlLoader">
    <property name="fileEncoding" value="utf-8"/>
    <property name="extension" value="sql"/>
  </component>

  <!-- TransactionFactoryの設定 -->
  <component name="transactionFactory" class="nablarch.core.db.transaction.JdbcTransactionFactory">
    <property name="isolationLevel" value="READ_COMMITTED"/>
  </component>

  <component name="dbExceptionFactory" class="nablarch.core.db.statement.exception.BasicSqlStatementExceptionFactory">
  </component>

  <!-- フィールド情報ローダーの設定 -->
  <component name="fieldAnnotationCache" class="nablarch.core.cache.BasicStaticDataCache">
    <property name="loader">
      <component class="nablarch.core.db.statement.autoproperty.FieldAndAnnotationLoader"/>
    </property>
    <property name="loadOnStartup" value="false"/>
  </component>

  <!-- StatementFactoryの設定 -->
  <component name="statementFactory" class="nablarch.core.db.statement.BasicStatementFactory">
    <property name="fetchSize" value="500"/>
    <property name="objectFieldCache" ref="fieldAnnotationCache"/>
    <property name="updatePreHookObjectHandlerList">
      <list>
        <component
                class="nablarch.core.db.statement.autoproperty.CurrentDateTimeAnnotationHandler">
          <property name="dateProvider">
            <component class="nablarch.core.date.BasicSystemTimeProvider"/>
          </property>
          <property name="dateFormat" value="yyyyMMdd"/>
          <property name="fieldAnnotationCache" ref="fieldAnnotationCache"/>
        </component>
        <component
                class="nablarch.core.db.statement.autoproperty.UserIdAnnotationHandler">
          <property name="fieldAnnotationCache" ref="fieldAnnotationCache"/>
        </component>
      </list>
    </property>
    <property name="sqlParameterParserFactory">
      <component class="nablarch.core.db.statement.BasicSqlParameterParserFactory"/>
    </property>
    <property name="sqlStatementExceptionFactory" ref="dbExceptionFactory"/>
    <property name="sqlLoader" ref="sqlLoader"/>
  </component>

  <!-- ConnectionFactoryの設定 -->
  <component name="connectionFactory"
             class="nablarch.core.db.connection.BasicDbConnectionFactoryForDataSource">
    <property name="dialect">
      <component class="please.change.me.common.mail.html.TestOracleDialect" />
    </property>
    <property name="dataSource" ref="dataSource"/>
    <property name="statementFactory" ref="statementFactory"/>
  </component>
  
  <!-- データソース設定 -->
  <component name="dataSource" class="oracle.ucp.jdbc.PoolDataSourceImpl">
    <property name="connectionFactoryClassName"
              value="oracle.jdbc.pool.OracleDataSource"/>
    <property name="user" value="${db.user}"/>
    <property name="password" value="${db.password}"/>
    <property name="URL" value="${db.url}"/>
    <property name="maxStatements" value="50"/>
    <property name="maxPoolSize" value="10"/>
    <property name="initialPoolSize" value="2"/>
  </component>

  <!-- 採番機能(ユニットテスト用) -->
  <component name="mockIdGenerator" class="please.change.me.common.file.management.DbFileManagementTest$MockIdGenerator">
  </component>
  
  <!-- ファイル管理機能(論理名fileManagementのコンポーネントを、FileManagementUtilクラスが使用する) -->
  <component name="fileManagement" class="please.change.me.common.file.management.DbFileManagement">
    <!-- 格納ファイルの最大長(単位：バイト) -->
    <property name="maxFileSize" value="10000000"/>
    <!-- 採番機能で、DbFileManagement用の採番である旨を識別するためのKey -->
    <property name="fileIdKey" value="1103" />
    <!-- 採番機能 -->
    <property name="idGenerator" ref="mockIdGenerator" />
    <!-- 採番時に使用するフォーマッター -->
    <property name="idFormatter" ref="fileManagementFormatter" />
  </component>

  <!-- 採番時に使用するフォーマッター(ファイル管理機能から使用) -->
  <component name="fileManagementFormatter" class="nablarch.common.idgenerator.formatter.LpadFormatter">
    <!-- 桁数 -->
    <property name="length" value="18" />
    <!-- 不足している桁を埋める文字 -->
    <property name="paddingChar" value="0" />
  </component>
</component-configuration>
